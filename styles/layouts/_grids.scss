/*
* MOBILE(<768px) 
* fixture -               sm
* # of columns            4EA
* margin                  5px
* gutter                  20px
* container-size          100%
* unit  (100%-(5px * 2))/4 - 20px
*---------------------------------------------
*
* TABLET (>= 768px)
* fixture -            md
* # of columns         12EA
* gutter               20px
* margin               30px
* container-size       100% - (margin * 2)
* max-container-size - 960px
*---------------------------------------------
*
* DESKTOP (>= 1200px)
* fixture -          lg
* # of columns       12EA
* gutter             20px
* margin             auto
* unit               75px
* container-size     1140px
* max-container-size 1140px
*/

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto;

  .row {
    display: flex;
    flex-wrap: wrap;
  }

  // .col-sm-1, .col-md-2, col-lg-3 이런식의 모든 colum 을 선택하고싶음.
  // css 선택자 사용, class^=는 'col-'로 시작하는 모든 클래스에 적용한다는 의미.
  [class^='col-'] {
    padding: 0 $gutter/2;
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      width: percentage($i/$sm-columns);
    }
  }

  //width가 breakpoint보다 커지면 적용
  @include responsive(Tablet) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i/$md-columns);
      }
    }
  }

  @include responsive(Desktop) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) *
          $i; //데스크탑은 %가 아니라 px형태라 고정값 사용
      }
    }
  }
}
